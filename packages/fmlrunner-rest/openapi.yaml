openapi: 3.0.3
info:
  title: FML Runner REST API
  description: |
    REST API for FHIR Mapping Language (FML) Runner providing FHIR-compliant endpoints
    for StructureMap compilation, execution, and resource management.
  version: 0.1.0
  contact:
    name: Carl Leitner
    url: https://github.com/litlfred/fmlrunner
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000
    description: Development server

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the FML Runner service
      tags:
        - Health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                    example: 0.1.0

  /StructureMap:
    get:
      summary: List StructureMaps
      description: Retrieve all registered StructureMaps with optional filtering
      tags:
        - StructureMap
      parameters:
        - name: name
          in: query
          description: Filter by StructureMap name
          schema:
            type: string
        - name: status
          in: query
          description: Filter by StructureMap status
          schema:
            type: string
            enum: [draft, active, retired, unknown]
        - name: url
          in: query
          description: Filter by StructureMap URL
          schema:
            type: string
            format: uri
        - name: _count
          in: query
          description: Number of results to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: _offset
          in: query
          description: Number of results to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: List of StructureMaps
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureMapBundle'

    post:
      summary: Create StructureMap
      description: Create a new StructureMap (server assigns ID)
      tags:
        - StructureMap
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/StructureMap'
                - $ref: '#/components/schemas/FmlContent'
      responses:
        '201':
          description: StructureMap created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureMap'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'

  /StructureMap/{id}:
    get:
      summary: Get StructureMap by ID
      description: Retrieve a specific StructureMap by ID
      tags:
        - StructureMap
      parameters:
        - name: id
          in: path
          required: true
          description: StructureMap ID
          schema:
            type: string
      responses:
        '200':
          description: StructureMap found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureMap'
        '404':
          description: StructureMap not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'

    put:
      summary: Update StructureMap
      description: Create or update a StructureMap with specific ID
      tags:
        - StructureMap
      parameters:
        - name: id
          in: path
          required: true
          description: StructureMap ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/StructureMap'
                - $ref: '#/components/schemas/FmlContent'
      responses:
        '200':
          description: StructureMap updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureMap'
        '201':
          description: StructureMap created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureMap'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'

    delete:
      summary: Delete StructureMap
      description: Remove a StructureMap by ID
      tags:
        - StructureMap
      parameters:
        - name: id
          in: path
          required: true
          description: StructureMap ID
          schema:
            type: string
      responses:
        '204':
          description: StructureMap deleted successfully
        '404':
          description: StructureMap not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'

  /StructureMap/$transform:
    post:
      summary: Transform operation
      description: Execute StructureMap transformation on input data
      tags:
        - StructureMap Operations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransformParameters'
      responses:
        '200':
          description: Transformation completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformResult'
        '400':
          description: Invalid input or transformation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'

  /Bundle:
    post:
      summary: Upload FHIR Bundle
      description: Process a FHIR Bundle containing StructureMaps, ConceptMaps, ValueSets, CodeSystems, and StructureDefinitions
      tags:
        - Bundle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bundle'
      responses:
        '200':
          description: Bundle processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleProcessingResult'
        '400':
          description: Invalid Bundle
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'

  /validate-fml-syntax:
    post:
      summary: Validate FML syntax
      description: |
        Validate the syntax of FHIR Mapping Language (FML) content without compiling to StructureMap.
        Returns detailed error information including line numbers and error locations for invalid syntax.
      tags:
        - Validation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fmlContent:
                  type: string
                  description: FML content to validate for syntax errors
                  example: |
                    map "http://example.org/TestMapping" = "TestMapping"
                    
                    uses "http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse" alias QR as source
                    uses "http://hl7.org/fhir/StructureDefinition/Patient" alias Patient as target
                    
                    group QuestionnaireResponse(source src : QR, target tgt : Patient) {
                      src.item as item -> tgt.gender = 'unknown';
                    }
              required:
                - fmlContent
      responses:
        '200':
          description: FML syntax is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'
              example:
                resourceType: OperationOutcome
                issue:
                  - severity: information
                    code: informational
                    diagnostics: FML syntax is valid
        '400':
          description: FML syntax is invalid or request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'
              examples:
                syntax_error:
                  summary: Syntax validation error
                  value:
                    resourceType: OperationOutcome
                    issue:
                      - severity: error
                        code: invariant
                        diagnostics: "FML content must start with a map declaration (e.g., \"map \\\"url\\\" = \\\"name\\\")"
                        location:
                          - "Beginning of file"
                        expression:
                          - "line 1"
                missing_content:
                  summary: Missing content error
                  value:
                    resourceType: OperationOutcome
                    issue:
                      - severity: error
                        code: invalid
                        diagnostics: fmlContent is required in request body
        '500':
          description: Internal server error during validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationOutcome'

components:
  schemas:
    StructureMap:
      type: object
      properties:
        resourceType:
          type: string
          const: StructureMap
        id:
          type: string
        url:
          type: string
          format: uri
        name:
          type: string
        title:
          type: string
        status:
          type: string
          enum: [draft, active, retired, unknown]
        experimental:
          type: boolean
        description:
          type: string
        group:
          type: array
          items:
            $ref: '#/components/schemas/StructureMapGroup'
      required:
        - resourceType
        - group

    StructureMapGroup:
      type: object
      properties:
        name:
          type: string
        typeMode:
          type: string
          enum: [none, types, type-and-types]
        documentation:
          type: string
        input:
          type: array
          items:
            $ref: '#/components/schemas/StructureMapGroupInput'
        rule:
          type: array
          items:
            $ref: '#/components/schemas/StructureMapGroupRule'
      required:
        - name
        - input

    StructureMapGroupInput:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        mode:
          type: string
          enum: [source, target]
        documentation:
          type: string
      required:
        - name
        - mode

    StructureMapGroupRule:
      type: object
      properties:
        name:
          type: string
        source:
          type: array
          items:
            $ref: '#/components/schemas/StructureMapGroupRuleSource'
        target:
          type: array
          items:
            $ref: '#/components/schemas/StructureMapGroupRuleTarget'
        documentation:
          type: string
      required:
        - source

    StructureMapGroupRuleSource:
      type: object
      properties:
        context:
          type: string
        element:
          type: string
        variable:
          type: string
        type:
          type: string
        min:
          type: integer
          minimum: 0
        max:
          type: string
      required:
        - context

    StructureMapGroupRuleTarget:
      type: object
      properties:
        context:
          type: string
        contextType:
          type: string
          enum: [variable, type]

    FmlContent:
      type: object
      properties:
        contentType:
          type: string
          const: text/fml
        content:
          type: string
          description: FML source content
      required:
        - contentType
        - content

    TransformParameters:
      type: object
      properties:
        resourceType:
          type: string
          const: Parameters
        parameter:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                enum: [source, map]
              valueString:
                type: string
              resource:
                type: object
      required:
        - resourceType
        - parameter

    TransformResult:
      type: object
      properties:
        resourceType:
          type: string
          const: Parameters
        parameter:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                const: result
              resource:
                type: object

    Bundle:
      type: object
      properties:
        resourceType:
          type: string
          const: Bundle
        id:
          type: string
        type:
          type: string
          enum: [transaction, collection]
        entry:
          type: array
          items:
            type: object
            properties:
              resource:
                type: object
      required:
        - resourceType

    StructureMapBundle:
      allOf:
        - $ref: '#/components/schemas/Bundle'
        - type: object
          properties:
            entry:
              type: array
              items:
                type: object
                properties:
                  resource:
                    $ref: '#/components/schemas/StructureMap'

    BundleProcessingResult:
      type: object
      properties:
        success:
          type: boolean
        processed:
          type: integer
        skipped:
          type: integer
        errors:
          type: array
          items:
            type: string
        resources:
          type: object
          properties:
            structureMaps:
              type: integer
            structureDefinitions:
              type: integer
            conceptMaps:
              type: integer
            valueSets:
              type: integer
            codeSystems:
              type: integer

    OperationOutcome:
      type: object
      properties:
        resourceType:
          type: string
          const: OperationOutcome
        issue:
          type: array
          items:
            type: object
            properties:
              severity:
                type: string
                enum: [fatal, error, warning, information]
              code:
                type: string
              details:
                type: object
                properties:
                  text:
                    type: string
              diagnostics:
                type: string

tags:
  - name: Health
    description: Health and status endpoints
  - name: StructureMap
    description: FHIR StructureMap resource management
  - name: StructureMap Operations
    description: FHIR StructureMap operations
  - name: Bundle
    description: FHIR Bundle processing
  - name: Validation
    description: FML syntax and content validation